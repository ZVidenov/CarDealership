// <auto-generated />
using System;
using CarDealership.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarDealership.Migrations
{
    [DbContext(typeof(DealershipContext))]
    partial class DealershipContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarDealership.Data.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("SalesmanId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SalesmanId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarDealership.Data.FinanceHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinanceHouses");
                });

            modelBuilder.Entity("CarDealership.Data.Salesman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Salesmen");
                });

            modelBuilder.Entity("CarDealership.Data.SalesmenHouses", b =>
                {
                    b.Property<int>("SalesmanId")
                        .HasColumnType("int");

                    b.Property<int>("FinanceHouseId")
                        .HasColumnType("int");

                    b.HasKey("SalesmanId", "FinanceHouseId");

                    b.HasIndex("FinanceHouseId");

                    b.ToTable("SalesmenHouses");
                });

            modelBuilder.Entity("CarDealership.Data.Car", b =>
                {
                    b.HasOne("CarDealership.Data.Salesman", "Salesman")
                        .WithMany("Cars")
                        .HasForeignKey("SalesmanId");

                    b.Navigation("Salesman");
                });

            modelBuilder.Entity("CarDealership.Data.SalesmenHouses", b =>
                {
                    b.HasOne("CarDealership.Data.FinanceHouse", "FinanceHouse")
                        .WithMany("Salesmen")
                        .HasForeignKey("FinanceHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealership.Data.Salesman", "Salesman")
                        .WithMany("FinanceHouses")
                        .HasForeignKey("SalesmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinanceHouse");

                    b.Navigation("Salesman");
                });

            modelBuilder.Entity("CarDealership.Data.FinanceHouse", b =>
                {
                    b.Navigation("Salesmen");
                });

            modelBuilder.Entity("CarDealership.Data.Salesman", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("FinanceHouses");
                });
#pragma warning restore 612, 618
        }
    }
}
